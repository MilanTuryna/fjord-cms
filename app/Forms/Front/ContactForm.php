<?php


namespace App\Forms\Front;


use App\Forms\FlashMessages;
use App\Forms\Form;
use App\Forms\FormRedirect;
use App\Forms\Front\Data\ContactFormData;
use App\Model\Database\Repository\Settings\GlobalSettingsRepository;
use App\Model\Database\Repository\SMTP\Entity\Mail;
use App\Model\Database\Repository\SMTP\Entity\Server;
use App\Model\Database\Repository\SMTP\MailRepository;
use App\Model\Database\Repository\SMTP\ServerRepository;
use JetBrains\PhpStorm\Pure;
use Nette\Application\UI\Presenter;
use Nette\Mail\Message;
use Nette\Mail\SmtpMailer;
use Nette\Utils\Html;
use Tracy\Debugger;

/**
 * Class ContactForm
 * @package App\Forms\Front
 */
class ContactForm extends Form
{

    /**
     * ContactForm constructor.
     * @param Presenter $presenter
     * @param ServerRepository $serverRepository
     * @param MailRepository $mailRepository
     * @param GlobalSettingsRepository $globalSettingsRepository
     * @param FormRedirect $formRedirect
     * @param int $serverId
     * @param string $anchor
     */
    #[Pure] public function __construct(Presenter $presenter, private ServerRepository $serverRepository, private MailRepository $mailRepository,
                                        private GlobalSettingsRepository $globalSettingsRepository, private FormRedirect $formRedirect, private int $serverId, private string $anchor = "")
    {
        parent::__construct($presenter);

        $this->presenter = $presenter;
        $this->errorAnchor = $this->anchor;
    }

    /**
     * @return \Nette\Application\UI\Form
     */
    public function create(): \Nette\Application\UI\Form
    {
        $form = parent::create();
        $form->addText("name", "Vaše jméno/Firma")->setRequired("Zadejte vaše jméno či název firmy.");
        $form->addEmail("email", "E-mail")->setRequired("Zadejte emailovou adresu odpovídající formátu.");
        $form->addTextArea("content", "Obsah")->setRequired("Zadejte obsah zprávy, kterou chcete odeslat.")->addRule(\Nette\Application\UI\Form::MIN_LENGTH, "Zpráva musí mít minimálně 30 znaků.", 30);
        $form->addCheckbox("accept")->setOmitted()->setRequired(true);
        $form->addSubmit("submit", "Odeslat");
        return $form; // TODO: Change the autogenerated stub
    }

    /**
     * @param \Nette\Application\UI\Form $form
     * @param ContactFormData $values
     * @throws \Exception
     */
    public function success(\Nette\Application\UI\Form $form, ContactFormData $values): void {
        /**
         * @var $server Server
         */
        $settings = $this->globalSettingsRepository->getActualSettings();
        $server = $this->serverRepository->findById($this->serverId);
        try {
            $message = new Message();
            $message->setFrom(sprintf("%s <%s>", $server->name, $server->server_email))->addTo($server->receiver_email)->setSubject("Nová zpráva: " . $settings->app_name)
                ->setHtmlBody("Tato zpráva přišla od <b>" . $values->name . " (" . $values->email . ")</b>:<br><br>" . Html::htmlToText($values->content));
            $mailer = new SmtpMailer(
                host: $server->server_host,
                username: $server->server_email,
                password: $server->server_password,
                encryption: 'ssl',
            );
            $mailer->send($message);
            $mail = new Mail();
            $mail->content = $values->content;
            $mail->title = $values->name . ": " . $values->email;
            $mail->server_id = $this->serverId;
            $mail->original_sender = $values->email;
            $this->mailRepository->insert($mail->iterable());
            $this->presenter->flashMessage("Email byl úspěšně odeslán. Odpovíme na něj co nejdříve.", FlashMessages::SUCCESS);
            $redirect = $this->formRedirect->route . $this->anchor ? "#" . $this->anchor : "";
            $this->presenter->redirect($this->formRedirect->route . ($this->anchor ? "#" . $this->anchor : ""), $this->formRedirect->args);
        } catch (\Exception $exception) {
            throw $exception;
            $this->presenter->flashMessage("Z neznámého důvodu se nepodařilo email odeslat. Zkuste to ručně.", FlashMessages::ERROR);
        }
    }
}