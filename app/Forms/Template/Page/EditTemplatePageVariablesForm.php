<?php


namespace App\Forms\Template\Page;


use App\Forms\Dynamic\Enum\InputType;
use App\Forms\FlashMessages;
use App\Forms\Form;
use App\Forms\FormOption;
use App\Forms\FormRedirect;
use App\Model\Database\Repository\Template\Entity\PageVariable;
use App\Model\Database\Repository\Template\PageVariableRepository;
use JetBrains\PhpStorm\NoReturn;
use JetBrains\PhpStorm\Pure;
use Nette\Application\AbortException;
use Nette\Application\UI\Presenter;

/**
 * Class EditTemplatePageVariablesForm
 * @package App\Forms\Template\Page
 */
class EditTemplatePageVariablesForm extends Form
{
    #[Pure] public function __construct(protected Presenter $presenter, private PageVariableRepository $pageVariableRepository, private $pageId, private FormRedirect $formRedirect)
    {
        parent::__construct($this->presenter);
    }

    /**
     * @return \Nette\Application\UI\Form
     */
    public function create(): \Nette\Application\UI\Form
    {
        $form = parent::create();
        /**
         * @var $pageVars PageVariable[]
         */
        $pageVars = $this->pageVariableRepository->findByColumn("page_id",$this->pageId);
        foreach ($pageVars as $var) {
            $input = match ($var->input_type) {
                InputType::COLOR_INPUT => $form->addText($var->id_name, $var->title)->setHtmlType("color"),
                InputType::DATE_INPUT => $this::createDateTime($form, $var->id_name, $var->title),
                InputType::TEXTAREA => $form->addTextArea($var->id_name, $var->title),
                InputType::CLASSIC_INPUT => $form->addText($var->id_name, $var->title)
            };
            if(isset($var->required) && $var->required) $input->setRequired(true);
            if(isset($var->content) && $var->content) $input->setDefaultValue($var->content);
            if(isset($var->description) && $var->description) $input->setOption(FormOption::OPTION_NOTE, $var->description);
        }
        $form->addSubmit("submit", "Nastavit proměnnou");
        return $form; // TODO: Change the autogenerated stub
    }

    /**
     * @param \Nette\Application\UI\Form $form
     * @param array $data
     * @throws AbortException
     */
    #[NoReturn] public function success(\Nette\Application\UI\Form $form, array $data): void {
        foreach ($data as $k => $v) {
            $this->pageVariableRepository->updateByColumn(PageVariable::id_name, [$k], [
                PageVariable::content => $v
            ]);
        }
        $this->presenter->flashMessage("Daná stránka byla úspěšně nastavena.", FlashMessages::SUCCESS);
        $this->presenter->redirect($this->formRedirect->route, $this->formRedirect->args);
    }
}